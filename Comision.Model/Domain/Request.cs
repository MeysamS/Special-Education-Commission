///////////////////////////////////////////////////////////
//  Request.cs
//  Implementation of the Class Request
//  Generated by Enterprise Architect
//  Created on:      09-Jun-2016 8:23:04 AM
//  Original author: ali-laptop
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using Comision.Model.Common;
using Comision.Model.Enum;

namespace Comision.Model.Domain
{
    /// <summary>
    /// <span dir="rtl">درخواست</span>
    /// </summary>
    public class Request : AuditableEntity<long>
    {
        public long PersonId { get; set; }
        public virtual Person Person { get; set; }
        public long MemberMasterId { get; set; }
        public virtual MemberMaster MemberMaster { get; set; }
        public virtual Commission Commission { get; set; }
        public virtual Council Council { get; set; }
        public virtual Vote Vote { get; set; }
        public virtual Archive Archive { get; set; }
        public RequestType RequestType { get; set; }

        /// <summary>
        /// تعداد واحد گذرانده
        /// </summary>
        public short NumberofSpentUnits { get; set; }

        /// <summary>
        /// تعداد واحد باقیمانده
        /// </summary>
        public short NumberofRemainingUnits { get; set; }
        public RequestStatus RequestStatus { get; set; }
        public string Description { get; set; }
        public virtual ICollection<Cartable> Cartables { get; set; }
        public virtual ICollection<Attachment> Attachments { get; set; }
        public Request() { }

        public RequestStatus ConvertCartableStatustoRequestStatus(CartableStatus cartableStatus)
        {
            switch (cartableStatus)
            {
                case CartableStatus.Confirmed:
                    return RequestStatus.InFlow;
                case CartableStatus.Returned:
                    return RequestStatus.Returned;
                case CartableStatus.Verdict:
                    return RequestStatus.Verdict;
                case CartableStatus.AgreetoVote:
                    return RequestStatus.AgreetoVote;
                case CartableStatus.OppositiontoVote:
                    return RequestStatus.OppositiontoVote;
                default:
                    return RequestStatus.Waiting;
            }
        }
    }
}