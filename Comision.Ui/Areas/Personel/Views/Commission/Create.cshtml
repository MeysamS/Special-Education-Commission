@using Comision.Helper.Utility
@using Comision.Model.Enum
@using Comision.Service.Model
@using Comision.Utility
@model Comision.Service.Model.CommissionModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Personel/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/persianDate/css")

<link href="~/Content/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" type="text/css" />
<link href="~/content/assets/global/plugins/bootstrap-select/css/bootstrap-select-rtl.min.css" rel="stylesheet" type="text/css" />
<style>
    .dropdown-menu li {
        font-family: 'tahoma';
        font-size: 16px;
    }
</style>
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="icon-home"></i>
            <a href="index.html">خانه</a>
            <i class="fa fa-angle-left"></i>
        </li>
        <li>
            <span>درخواست کمسیون</span>
        </li>
    </ul>
    <div style="float: left; margin-top: 4px" class="actions">
        <a href="@Url.Action(MVC.Personel.Request.Index())" type="button"
           class="btn btn-sm btn-circle yellow btn-outline">
            <i class="fa fa-undo"></i>
        </a>
    </div>

</div>

<div class="row">
    <div class="col-md-12">
        <div class="portlet light ">

            <div class="portlet-title">
                <div class="caption font-red-sunglo">
                    <i class="icon-settings font-red-sunglo"></i>
                    <span class="caption-subject bold uppercase">ایجاد درخواست کمسیون موارد خاص</span>
                </div>
                <button type="button" style="float: left" class="btn default" onclick="ClearEdit();">انصراف</button>
                @Html.SecureActionLink(null, null, null, AccessLevel.CreateCommission, "<i class='fa fa-save'></i> ذخیره", null, new Dictionary<string, object> { { "class", "btn btn-inline blue" }, { "style", "float: left" }, { "onclick", "saveRequest()" }, { "href", "javascript:void(0)" } })
                @*<button type="button" style="float: left" onclick="saveRequest();" class="btn blue"><i class="fa fa-save"></i> ذخیره</button>*@
            </div>
            <div class="portlet-body form">
                @using (Html.BeginForm(MVC.Personel.Commission.Create(), FormMethod.Post, new { id = "requestform", @class = "form-horizontal", enctype = "multipart/form-data", role = "form" }))
            {
                    <div class="form-body">
                        <table class="table table-bordered table-striped table-condensed flip-content">
                            <thead class="flip-content">
                                <tr style="font-size: 10px">
                                  @*  <th class="numeric" width="25%" style="font-size: 12px"> @Html.LabelFor(m => m.CommissionNumber, new { @class = "col-md-1 control-label" }) </th>*@
                                    <th width="25%" style="font-size: 12px"> @Html.LabelFor(m => m.Date, new { @class = "col-md-1 control-label" }) </th>
                                    <th class="numeric" width="25%" style="font-size: 12px"> شماره دانشجویی </th>
                                    <th width="25%" style="font-size: 12px">  </th>
                                    <th width="25%" style="font-size: 12px">  </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="numeric">
                                        @Html.EditorFor(m => m.Date, new { @class = "form-control", style = "max-width: none;height:100px" })
                                        @Html.HiddenFor(m => m.CommissionNumber)
                                        @* @Html.TextBoxFor(m => m.CommissionNumber, new { @class = "form-control", style = "max-width: none" })*@
                                    </td>
                                    <td class="numeric">
                                        @Html.TextBoxFor(m => m.StudentNumber, new { id = "txtStudentNumber", @class = "form-control" })
                                    </td>
                                    <td>
                                        @Html.SecureActionLink(null, null, null, AccessLevel.SaveStudentProfile, "<i class='fa fa-plus'> اضافه کردن اطلاعات دانشجوی جدید  </i>", null, new Dictionary<string, object>
                                    {{"class", "btn btn-icon grey-cascade"}, {"href", "javascript:void(0)"}, {"data-toggle", "modal"}, {"onclick", "showModalProfile()"}})

                                    </td>
                                    <td>
                                   
                                    </td>
                                </tr>
                            </tbody>

                            <thead class="flip-content">
                                <tr style="font-size: 10px">
                                    <th width="25%" style="font-size: 12px"> نام و نام خانوادگی </th>
                                    <th class="numeric" width="25%" style="font-size: 12px"> شماره ملی </th>
                                    <th width="25%" style="font-size: 12px"> جنسیت </th>
                                    <th class="" width="25%" style="font-size: 12px"> نظام وظیفه </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        @Html.HiddenFor(m => m.Id)
                                        @Html.HiddenFor(m => m.PersonId, new { id = "txtPersonId" })
                                        @Html.TextBoxFor(m => m.NameFamily, new { @class = "form-control", disabled = "disabled" })
                                    </td>
                                    <td class="numeric">
                                        @Html.TextBoxFor(m => m.NationalCode, new { id = "txtNationalCode", @class = "form-control", disabled = "disabled" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => m.GenderString, new { id = "txtGender", @class = "form-control", disabled = "disabled" })
                                    </td>
                                    <td class="">
                                        @Html.TextBoxFor(m => m.MilitaryServiceStatusString, new { id = "txtMilitaryServiceStatus", @class = "form-control", disabled = "disabled" })
                                    </td>
                                </tr>
                            </tbody>

                            <thead class="flip-content">
                                <tr style="font-size: 10px">
                                    <th width="25%" style="font-size: 12px"> رشته تحصیلی </th>
                                    <th class="" width="25%" style="font-size: 12px"> مقطع تحصیلی </th>
                                    <th class="numeric" width="25%" style="font-size: 12px"> تعداد واحد گذرانده </th>
                                    <th class="numeric" width="25%" style="font-size: 12px"> تعداد واحد باقیمانده </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="">
                                        @Html.TextBoxFor(m => m.FieldofStudy, new { id = "txtFieldofStudy", disabled = "disabled", @class = "form-control", })
                                    </td>
                                    <td class="">
                                        @Html.TextBoxFor(m => m.GradeString, new { id = "txtGrade", @class = "form-control", disabled = "disabled" })
                                    </td>
                                    <td class="numeric">
                                        @Html.TextBoxFor(m => m.NumberofSpentUnits, new { @class = "form-control" })
                                    </td>
                                    <td class="numeric">
                                        @Html.TextBoxFor(m => m.NumberofRemainingUnits, new { @class = "form-control" })
                                        @*<input class="form-control" placeholder="">*@
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <table class="table table-bordered table-striped table-condensed flip-content">
                            <thead class="flip-content">
                                <tr>
                                    <th width="50%"> موارد خاص آموزشی </th>
                                    <th width="50%">توضیحات </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <div id="dlSpecialEducation"></div>
                                    </td>
                                    <td>
                                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "10" })
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div id="modalProfile" class="modal fade bs-modal-lg in" tabindex="-1" role="dialog" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button id="btnCloseModal" type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">ثبت اطلاعات دانشجو</h4>
            </div>
            <div id="dataModalProfile" class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn blue" onclick="SaveStudent();">ذخیره</button>
                <a href='javascript:void(0);' class="btn default" onclick="">انصراف</a>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>


@section Scripts{
    @Scripts.Render("~/bundles/PersianDate")
    <script src="~/content/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
    <script src="~/Content/assets/global/plugins/bootstrap-select/js/bootstrap-select.min.js" type="text/javascript"></script>
    <script src="~/content/assets/pages/scripts/components-bootstrap-select.min.js" type="text/javascript"></script>

    <script>
        $('#requestform').ajaxForm();
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        function showModalProfile() {
            var studentNumber = Number($('#txtStudentNumber').val());
            $.blockUI({ boxed: !0, message: '<h4 style="font-family:tahoma;"><img src="/content/assets/global/img/loading-spinner-grey.gif" /> شکیبا باشید...</h4>' });
            $.ajax({
                cashe: false,
                url: '@Url.Action(MVC.Personel.Commission.GetStudentProfile(), "http")',
                type: 'get',
                datatype: 'html',
                data: { studentNumber: studentNumber,requestType:@((int)RequestType.Comision) },
                success: function (data) {
                    $.unblockUI();
                    $('#dataModalProfile').html(data);
                    $('#modalProfile').modal('show');
                },
                error: function (xhr, status) {
                    ClearStudent();
                    $.unblockUI();
                    mynotification("خطا در عملیات", 'ruby');
                }
            });
        }

        $("#txtStudentNumber").blur(function () {
            var studentNumber = Number(this.value);
            GetStudent(studentNumber);
        });

        function GetStudent(studentNumber) {
            $.blockUI({ boxed: !0, message: '<h4 style="font-family:tahoma;"><img src="/content/assets/global/img/loading-spinner-grey.gif" /> شکیبا باشید...</h4>' });
            $.ajax({
                cashe: false,
                url: '@Url.Action(MVC.Account.IsStudentExist(), "http")',
                type: 'post',
                datatype: 'json',
                data: { studentNumber: studentNumber,requestType:@((int)RequestType.Comision) },
                success: function (data) {
                    $.unblockUI();
                    if (data.IsError) {
                        ClearStudent();
                        mynotification(data.Message, 'ruby');
                    } else {
                        $("#txtStudentNumber").val(data.Data.StudentNumber);
                        $("#txtPersonId").val(data.Data.PersonId);
                        $("#NameFamily").val(data.Data.Name);
                        $("#txtNationalCode").val(data.Data.NationalCode);
                        $('#txtFieldofStudy').val(data.Data.FieldofStudyString);
                        $("#txtGender").val(data.Data.GenderString);
                        $("#txtGrade").val(data.Data.GradeString);
                        $("#NumberofRemainingUnits").val(data.Data.NumberofRemainingUnits);
                        $("#NumberofSpentUnits").val(data.Data.NumberofSpentUnits);
                        $("#txtMilitaryServiceStatus").val(data.Data.MilitaryServiceStatusString);
                    }
                },
                error: function (xhr, status) {
                    ClearStudent();
                    $.unblockUI();
                    mynotification("خطا در لود اطلاعات دانشجویی!", 'ruby');
                }
            });
        }
        function ClearStudent() {
            //$("#StudentNumber").val("");
            $("#txtPersonId").val(0);
            $("#NameFamily").val("");
            $("#txtNationalCode").val("");
            $("#txtFieldofStudy").val("");
            //$("#RequestType").val(0);
            //$("#RequestStatus").val(0);
            $("#txtGender").val("");
            $("#txtGrade").val("");
            $("#NumberofRemainingUnits").val("");
            $("#NumberofSpentUnits").val("");
            $("#txtMilitaryServiceStatus").val("");
        }

        $('#dlSpecialEducation').datalist(
        {
            fit: true,
            loadMsg: 'شکیبا باشید...',
            singleSelect: false,
            //selectOnCheck: false,
            //width: 250,
            //height: 250,
            valueField: 'id',
            checkbox: true,
            lines: true,
            url: '@Url.Action(MVC.Personel.Commission.GetListSpecialEducation())'
        });

        function SaveStudent() {
            if (Number($('#StudentNumber').val())<=0 ) {
                mynotification('لطفا شماره دانشجویی را وارد کنید!', 'ruby');
                return $(this).form('validate');
            }
            if ($('#cmbFieldofStudy').val() < 0) {
                mynotification('لطفا رشته تحصیلی را وارد کنید!', 'ruby');
                return $(this).form('validate');
            }
            if ($('#saveStudentProfile').valid()) {
                $.blockUI({ boxed: !0, message: '<h4 style="font-family:tahoma;"><img src="/content/assets/global/img/loading-spinner-grey.gif" /> شکیبا باشید...</h4>' });
                $('#saveStudentProfile').ajaxSubmit({
                    cashe: false,
                    url: '@Url.Action(MVC.Personel.Commission.SaveStudentProfile(), "http")',
                    type: 'Post',
                    dataType: 'json',
                    //data: { special: strSpecialEducation },
                    success: function (result) {
                        $.unblockUI();
                        if (result.isError) {
                            mynotification(result.Message, 'ruby');
                        } else {
                            mynotification(result.Message, 'lime');
                            GetStudent($("#StudentNumber").val());
                            $('#btnCloseModal').click();
                        }
                    },
                    error: function (xhr, status) {
                        $.unblockUI();
                        mynotification("خطا در ثبت اطلاعات دانشجویی!", 'ruby');
                    }
                });
            } else {
                mynotification('خطا در ورود اطلاعات.', 'ruby');
                return $(this).form('validate');
            }
            return $(this).form('validate');
        }

        function saveRequest() {
            //if (Number($('#CommissionNumber').val()) <= 0) {
            //    mynotification('لطفا شماره کمیسیون را درست وارد کنید!', 'ruby');
            //    return $(this).form('validate');
            //}
            if (Number($('#txtPersonId').val()) <= 0) {
                mynotification('اطلاعات دانشجویی به درستی لود نشده است!', 'ruby');
                return $(this).form('validate');
            }
            //if (Number($('#txtStudentNumber').val()) <= 0) {
            //    mynotification('لطفا شماره دانشجویی را درست وارد کنید!', 'ruby');
            //    return $(this).form('validate');
            //}
            //if (Number($('#NationalCode').val()) <= 0) {
            //    mynotification('لطفا شماره ملی را بصورت عددی وارد کنید!', 'ruby');
            //    return $(this).form('validate');
            //}
            var specialEducations = {
                lineas: []
            };
            var strSpecialEducation = "";
            var specialEducation;
            var row = $('#dlSpecialEducation').datalist('getChecked');
            if (row.length < 1) {
                mynotification('لطفا موارد خاص آموزشی را انتخاب کنید!', 'ruby');
                return $(this).form('validate');
            }
            for (var i = 0; i < row.length; i++) {
                specialEducation = row[i];
                specialEducations.lineas.push({
                    "Id": specialEducation.value,
                    "Name": specialEducation.text
                });
                strSpecialEducation =
                    strSpecialEducation +
                    specialEducation.value + "," +
                    specialEducation.text + "&";
                @*@Model.CommissionSpecialEducations.Add(new CommissionSpecialEducation() {CommissionId = Convert.ToInt64(Model.Id),SpecialEducationId = specialEducation.id })*@
            }
            if ($('#requestform').valid()) {
                $.blockUI({ boxed: !0, message: '<h4 style="font-family:tahoma;"><img src="/content/assets/global/img/loading-spinner-grey.gif" /> شکیبا باشید...</h4>' });
                $('#requestform').ajaxSubmit({
                    cashe: false,
                    url: '@Url.Action(MVC.Personel.Commission.Create(), "http")',
                    type: 'Post',
                    dataType: 'json',
                    data: { special: strSpecialEducation },
                    success: function (result) {
                        $.unblockUI();
                        if (result.isError) {
                            mynotification(result.Message, 'ruby');
                        } else {
                            mynotification(result.Message, 'lime');
                            var url = '@Url.Action(MVC.Personel.Request.Index())?requestId=' + result.requestId + '';
                            window.location.href = url;
                        }
                    },
                    error: function (xhr, status) {
                        $.unblockUI();
                        mynotification("خطا در ثبت درخواست", 'ruby');
                    }
                });
            } else {
                mynotification('خطا در ورود اطلاعات.', 'ruby');
                return $(this).form('validate');
            }
            return $(this).form('validate');
        }
    </script>

}