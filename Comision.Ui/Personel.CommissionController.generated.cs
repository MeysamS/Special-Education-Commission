// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Comision.Ui.Areas.Personel.Controllers
{
    public partial class CommissionController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CommissionController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetListSpecialEducationforRequest()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListSpecialEducationforRequest);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Update()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SendCommissionToCartable()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendCommissionToCartable);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetStudentProfile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetStudentProfile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SaveStudentProfile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveStudentProfile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Attachment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attachment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetAttachment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAttachment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UploadAttachment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadAttachment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CommissionController Actions { get { return MVC.Personel.Commission; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Personel";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Commission";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Commission";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetListSpecialEducation = "GetListSpecialEducation";
            public readonly string GetListSpecialEducationforRequest = "GetListSpecialEducationforRequest";
            public readonly string Create = "Create";
            public readonly string Update = "Update";
            public readonly string SendCommissionToCartable = "SendCommissionToCartable";
            public readonly string GetStudentProfile = "GetStudentProfile";
            public readonly string SaveStudentProfile = "SaveStudentProfile";
            public readonly string Attachment = "Attachment";
            public readonly string GetAttachment = "GetAttachment";
            public readonly string UploadAttachment = "UploadAttachment";
            public readonly string DeleteFile = "DeleteFile";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetListSpecialEducation = "GetListSpecialEducation";
            public const string GetListSpecialEducationforRequest = "GetListSpecialEducationforRequest";
            public const string Create = "Create";
            public const string Update = "Update";
            public const string SendCommissionToCartable = "SendCommissionToCartable";
            public const string GetStudentProfile = "GetStudentProfile";
            public const string SaveStudentProfile = "SaveStudentProfile";
            public const string Attachment = "Attachment";
            public const string GetAttachment = "GetAttachment";
            public const string UploadAttachment = "UploadAttachment";
            public const string DeleteFile = "DeleteFile";
        }


        static readonly ActionParamsClass_GetListSpecialEducationforRequest s_params_GetListSpecialEducationforRequest = new ActionParamsClass_GetListSpecialEducationforRequest();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetListSpecialEducationforRequest GetListSpecialEducationforRequestParams { get { return s_params_GetListSpecialEducationforRequest; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetListSpecialEducationforRequest
        {
            public readonly string requestId = "requestId";
        }
        static readonly ActionParamsClass_Create s_params_Create = new ActionParamsClass_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Create CreateParams { get { return s_params_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Create
        {
            public readonly string special = "special";
            public readonly string commissionModel = "commissionModel";
        }
        static readonly ActionParamsClass_Update s_params_Update = new ActionParamsClass_Update();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Update UpdateParams { get { return s_params_Update; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Update
        {
            public readonly string requestId = "requestId";
            public readonly string special = "special";
            public readonly string commissionModel = "commissionModel";
        }
        static readonly ActionParamsClass_SendCommissionToCartable s_params_SendCommissionToCartable = new ActionParamsClass_SendCommissionToCartable();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendCommissionToCartable SendCommissionToCartableParams { get { return s_params_SendCommissionToCartable; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendCommissionToCartable
        {
            public readonly string requestId = "requestId";
            public readonly string rowNumber = "rowNumber";
            public readonly string description = "description";
            public readonly string fieldofStudyId = "fieldofStudyId";
        }
        static readonly ActionParamsClass_GetStudentProfile s_params_GetStudentProfile = new ActionParamsClass_GetStudentProfile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetStudentProfile GetStudentProfileParams { get { return s_params_GetStudentProfile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetStudentProfile
        {
            public readonly string studentNumber = "studentNumber";
            public readonly string requestType = "requestType";
        }
        static readonly ActionParamsClass_SaveStudentProfile s_params_SaveStudentProfile = new ActionParamsClass_SaveStudentProfile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveStudentProfile SaveStudentProfileParams { get { return s_params_SaveStudentProfile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveStudentProfile
        {
            public readonly string studentProfileModel = "studentProfileModel";
        }
        static readonly ActionParamsClass_Attachment s_params_Attachment = new ActionParamsClass_Attachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Attachment AttachmentParams { get { return s_params_Attachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Attachment
        {
            public readonly string requestId = "requestId";
        }
        static readonly ActionParamsClass_GetAttachment s_params_GetAttachment = new ActionParamsClass_GetAttachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAttachment GetAttachmentParams { get { return s_params_GetAttachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAttachment
        {
            public readonly string requestId = "requestId";
        }
        static readonly ActionParamsClass_UploadAttachment s_params_UploadAttachment = new ActionParamsClass_UploadAttachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadAttachment UploadAttachmentParams { get { return s_params_UploadAttachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadAttachment
        {
            public readonly string attachmentModel = "attachmentModel";
            public readonly string fileAttach = "fileAttach";
        }
        static readonly ActionParamsClass_DeleteFile s_params_DeleteFile = new ActionParamsClass_DeleteFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteFile DeleteFileParams { get { return s_params_DeleteFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteFile
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _StudentProfile = "_StudentProfile";
                public readonly string Create = "Create";
                public readonly string Index = "Index";
                public readonly string Update = "Update";
            }
            public readonly string _StudentProfile = "~/Areas/Personel/Views/Commission/_StudentProfile.cshtml";
            public readonly string Create = "~/Areas/Personel/Views/Commission/Create.cshtml";
            public readonly string Index = "~/Areas/Personel/Views/Commission/Index.cshtml";
            public readonly string Update = "~/Areas/Personel/Views/Commission/Update.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CommissionController : Comision.Ui.Areas.Personel.Controllers.CommissionController
    {
        public T4MVC_CommissionController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetListSpecialEducationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetListSpecialEducation()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListSpecialEducation);
            GetListSpecialEducationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetListSpecialEducationforRequestOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetListSpecialEducationforRequest(long requestId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListSpecialEducationforRequest);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            GetListSpecialEducationforRequestOverride(callInfo, requestId);
            return callInfo;
        }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Create()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            CreateOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string special, Comision.Service.Model.CommissionModel commissionModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult Create(string special, Comision.Service.Model.CommissionModel commissionModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "special", special);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commissionModel", commissionModel);
            CreateOverride(callInfo, special, commissionModel);
            return callInfo;
        }

        [NonAction]
        partial void UpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Update(long requestId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            UpdateOverride(callInfo, requestId);
            return callInfo;
        }

        [NonAction]
        partial void UpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string special, Comision.Service.Model.CommissionModel commissionModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult Update(string special, Comision.Service.Model.CommissionModel commissionModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "special", special);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commissionModel", commissionModel);
            UpdateOverride(callInfo, special, commissionModel);
            return callInfo;
        }

        [NonAction]
        partial void SendCommissionToCartableOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, int rowNumber, string description, long fieldofStudyId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendCommissionToCartable(long requestId, int rowNumber, string description, long fieldofStudyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendCommissionToCartable);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rowNumber", rowNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "description", description);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fieldofStudyId", fieldofStudyId);
            SendCommissionToCartableOverride(callInfo, requestId, rowNumber, description, fieldofStudyId);
            return callInfo;
        }

        [NonAction]
        partial void GetStudentProfileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long studentNumber, int requestType);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetStudentProfile(long studentNumber, int requestType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetStudentProfile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "studentNumber", studentNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestType", requestType);
            GetStudentProfileOverride(callInfo, studentNumber, requestType);
            return callInfo;
        }

        [NonAction]
        partial void SaveStudentProfileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Comision.Service.Model.StudentProfileModel studentProfileModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveStudentProfile(Comision.Service.Model.StudentProfileModel studentProfileModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveStudentProfile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "studentProfileModel", studentProfileModel);
            SaveStudentProfileOverride(callInfo, studentProfileModel);
            return callInfo;
        }

        [NonAction]
        partial void AttachmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Attachment(long requestId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            AttachmentOverride(callInfo, requestId);
            return callInfo;
        }

        [NonAction]
        partial void GetAttachmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAttachment(long requestId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAttachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            GetAttachmentOverride(callInfo, requestId);
            return callInfo;
        }

        [NonAction]
        partial void UploadAttachmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Comision.Service.Model.AttachmentModel attachmentModel, System.Web.HttpPostedFileBase fileAttach);

        [NonAction]
        public override System.Web.Mvc.ActionResult UploadAttachment(Comision.Service.Model.AttachmentModel attachmentModel, System.Web.HttpPostedFileBase fileAttach)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadAttachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "attachmentModel", attachmentModel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileAttach", fileAttach);
            UploadAttachmentOverride(callInfo, attachmentModel, fileAttach);
            return callInfo;
        }

        [NonAction]
        partial void DeleteFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteFile(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteFileOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
