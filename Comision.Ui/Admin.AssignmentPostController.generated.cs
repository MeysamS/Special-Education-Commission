// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Comision.Ui.Areas.Admin.Controllers
{
    public partial class AssignmentPostController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AssignmentPostController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddOrUpdateAssignmentPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddOrUpdateAssignmentPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetListPostofPersonel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListPostofPersonel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetListStructure()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListStructure);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteAssignmentPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAssignmentPost);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AssignmentPostController Actions { get { return MVC.Admin.AssignmentPost; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "AssignmentPost";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "AssignmentPost";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string AddOrUpdateAssignmentPost = "AddOrUpdateAssignmentPost";
            public readonly string GetListPostofPersonel = "GetListPostofPersonel";
            public readonly string GetListPersonel = "GetListPersonel";
            public readonly string GetListPost = "GetListPost";
            public readonly string GetListStructure = "GetListStructure";
            public readonly string DeleteAssignmentPost = "DeleteAssignmentPost";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string AddOrUpdateAssignmentPost = "AddOrUpdateAssignmentPost";
            public const string GetListPostofPersonel = "GetListPostofPersonel";
            public const string GetListPersonel = "GetListPersonel";
            public const string GetListPost = "GetListPost";
            public const string GetListStructure = "GetListStructure";
            public const string DeleteAssignmentPost = "DeleteAssignmentPost";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string personId = "personId";
        }
        static readonly ActionParamsClass_AddOrUpdateAssignmentPost s_params_AddOrUpdateAssignmentPost = new ActionParamsClass_AddOrUpdateAssignmentPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddOrUpdateAssignmentPost AddOrUpdateAssignmentPostParams { get { return s_params_AddOrUpdateAssignmentPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddOrUpdateAssignmentPost
        {
            public readonly string postPersonModel = "postPersonModel";
        }
        static readonly ActionParamsClass_GetListPostofPersonel s_params_GetListPostofPersonel = new ActionParamsClass_GetListPostofPersonel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetListPostofPersonel GetListPostofPersonelParams { get { return s_params_GetListPostofPersonel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetListPostofPersonel
        {
            public readonly string personId = "personId";
        }
        static readonly ActionParamsClass_GetListStructure s_params_GetListStructure = new ActionParamsClass_GetListStructure();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetListStructure GetListStructureParams { get { return s_params_GetListStructure; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetListStructure
        {
            public readonly string postId = "postId";
            public readonly string postType = "postType";
        }
        static readonly ActionParamsClass_DeleteAssignmentPost s_params_DeleteAssignmentPost = new ActionParamsClass_DeleteAssignmentPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteAssignmentPost DeleteAssignmentPostParams { get { return s_params_DeleteAssignmentPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteAssignmentPost
        {
            public readonly string personId = "personId";
            public readonly string postId = "postId";
            public readonly string postTypeId = "postTypeId";
            public readonly string levelId = "levelId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
            }
            public readonly string Index = "~/Areas/Admin/Views/AssignmentPost/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AssignmentPostController : Comision.Ui.Areas.Admin.Controllers.AssignmentPostController
    {
        public T4MVC_AssignmentPostController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? personId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(long? personId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "personId", personId);
            IndexOverride(callInfo, personId);
            return callInfo;
        }

        [NonAction]
        partial void AddOrUpdateAssignmentPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Comision.Service.Model.PostPersonModel postPersonModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddOrUpdateAssignmentPost(Comision.Service.Model.PostPersonModel postPersonModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddOrUpdateAssignmentPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postPersonModel", postPersonModel);
            AddOrUpdateAssignmentPostOverride(callInfo, postPersonModel);
            return callInfo;
        }

        [NonAction]
        partial void GetListPostofPersonelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long personId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetListPostofPersonel(long personId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListPostofPersonel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "personId", personId);
            GetListPostofPersonelOverride(callInfo, personId);
            return callInfo;
        }

        [NonAction]
        partial void GetListPersonelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetListPersonel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListPersonel);
            GetListPersonelOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetListPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetListPost()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListPost);
            GetListPostOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetListStructureOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long postId, Comision.Model.Enum.PostType postType);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetListStructure(long postId, Comision.Model.Enum.PostType postType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListStructure);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postType", postType);
            GetListStructureOverride(callInfo, postId, postType);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAssignmentPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long personId, long postId, int postTypeId, long levelId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteAssignmentPost(long personId, long postId, int postTypeId, long levelId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAssignmentPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "personId", personId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postTypeId", postTypeId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "levelId", levelId);
            DeleteAssignmentPostOverride(callInfo, personId, postId, postTypeId, levelId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
