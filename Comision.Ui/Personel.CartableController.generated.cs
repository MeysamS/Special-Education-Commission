// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Comision.Ui.Areas.Personel.Controllers
{
    public partial class CartableController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CartableController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Confirm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Confirm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ConfirmOnBehalfof()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmOnBehalfof);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Vote()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Vote);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VotePermanent()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VotePermanent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VoteTemporary()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteTemporary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Return()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Return);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AgreetoVote()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AgreetoVote);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OppositiontoVote()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OppositiontoVote);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetCartableRequestCount()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCartableRequestCount);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Attachment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attachment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetAttachment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAttachment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UploadAttachment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadAttachment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CartableController Actions { get { return MVC.Personel.Cartable; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Personel";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Cartable";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Cartable";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetListCartable = "GetListCartable";
            public readonly string Confirm = "Confirm";
            public readonly string ConfirmOnBehalfof = "ConfirmOnBehalfof";
            public readonly string Vote = "Vote";
            public readonly string VotePermanent = "VotePermanent";
            public readonly string VoteTemporary = "VoteTemporary";
            public readonly string Return = "Return";
            public readonly string AgreetoVote = "AgreetoVote";
            public readonly string OppositiontoVote = "OppositiontoVote";
            public readonly string GetCartableRequestCount = "GetCartableRequestCount";
            public readonly string Attachment = "Attachment";
            public readonly string GetAttachment = "GetAttachment";
            public readonly string UploadAttachment = "UploadAttachment";
            public readonly string DeleteFile = "DeleteFile";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetListCartable = "GetListCartable";
            public const string Confirm = "Confirm";
            public const string ConfirmOnBehalfof = "ConfirmOnBehalfof";
            public const string Vote = "Vote";
            public const string VotePermanent = "VotePermanent";
            public const string VoteTemporary = "VoteTemporary";
            public const string Return = "Return";
            public const string AgreetoVote = "AgreetoVote";
            public const string OppositiontoVote = "OppositiontoVote";
            public const string GetCartableRequestCount = "GetCartableRequestCount";
            public const string Attachment = "Attachment";
            public const string GetAttachment = "GetAttachment";
            public const string UploadAttachment = "UploadAttachment";
            public const string DeleteFile = "DeleteFile";
        }


        static readonly ActionParamsClass_Confirm s_params_Confirm = new ActionParamsClass_Confirm();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Confirm ConfirmParams { get { return s_params_Confirm; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Confirm
        {
            public readonly string requestId = "requestId";
            public readonly string postId = "postId";
            public readonly string rowNumber = "rowNumber";
            public readonly string description = "description";
            public readonly string fieldofStudyId = "fieldofStudyId";
        }
        static readonly ActionParamsClass_ConfirmOnBehalfof s_params_ConfirmOnBehalfof = new ActionParamsClass_ConfirmOnBehalfof();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ConfirmOnBehalfof ConfirmOnBehalfofParams { get { return s_params_ConfirmOnBehalfof; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ConfirmOnBehalfof
        {
            public readonly string userId = "userId";
            public readonly string requestId = "requestId";
            public readonly string postId = "postId";
            public readonly string rowNumber = "rowNumber";
            public readonly string description = "description";
        }
        static readonly ActionParamsClass_Vote s_params_Vote = new ActionParamsClass_Vote();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Vote VoteParams { get { return s_params_Vote; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Vote
        {
            public readonly string requestId = "requestId";
            public readonly string postId = "postId";
            public readonly string rowNumber = "rowNumber";
            public readonly string requestType = "requestType";
        }
        static readonly ActionParamsClass_VotePermanent s_params_VotePermanent = new ActionParamsClass_VotePermanent();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VotePermanent VotePermanentParams { get { return s_params_VotePermanent; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VotePermanent
        {
            public readonly string voteModel = "voteModel";
        }
        static readonly ActionParamsClass_VoteTemporary s_params_VoteTemporary = new ActionParamsClass_VoteTemporary();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VoteTemporary VoteTemporaryParams { get { return s_params_VoteTemporary; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VoteTemporary
        {
            public readonly string voteModel = "voteModel";
        }
        static readonly ActionParamsClass_Return s_params_Return = new ActionParamsClass_Return();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Return ReturnParams { get { return s_params_Return; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Return
        {
            public readonly string requestId = "requestId";
            public readonly string postId = "postId";
            public readonly string rowNumber = "rowNumber";
            public readonly string description = "description";
            public readonly string fieldofStudyId = "fieldofStudyId";
        }
        static readonly ActionParamsClass_AgreetoVote s_params_AgreetoVote = new ActionParamsClass_AgreetoVote();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AgreetoVote AgreetoVoteParams { get { return s_params_AgreetoVote; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AgreetoVote
        {
            public readonly string requestId = "requestId";
            public readonly string postId = "postId";
            public readonly string rowNumber = "rowNumber";
            public readonly string description = "description";
            public readonly string fieldofStudyId = "fieldofStudyId";
        }
        static readonly ActionParamsClass_OppositiontoVote s_params_OppositiontoVote = new ActionParamsClass_OppositiontoVote();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OppositiontoVote OppositiontoVoteParams { get { return s_params_OppositiontoVote; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OppositiontoVote
        {
            public readonly string requestId = "requestId";
            public readonly string postId = "postId";
            public readonly string rowNumber = "rowNumber";
            public readonly string description = "description";
            public readonly string fieldofStudyId = "fieldofStudyId";
        }
        static readonly ActionParamsClass_GetCartableRequestCount s_params_GetCartableRequestCount = new ActionParamsClass_GetCartableRequestCount();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCartableRequestCount GetCartableRequestCountParams { get { return s_params_GetCartableRequestCount; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCartableRequestCount
        {
            public readonly string userId = "userId";
        }
        static readonly ActionParamsClass_Attachment s_params_Attachment = new ActionParamsClass_Attachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Attachment AttachmentParams { get { return s_params_Attachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Attachment
        {
            public readonly string requestId = "requestId";
        }
        static readonly ActionParamsClass_GetAttachment s_params_GetAttachment = new ActionParamsClass_GetAttachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAttachment GetAttachmentParams { get { return s_params_GetAttachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAttachment
        {
            public readonly string requestId = "requestId";
        }
        static readonly ActionParamsClass_UploadAttachment s_params_UploadAttachment = new ActionParamsClass_UploadAttachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadAttachment UploadAttachmentParams { get { return s_params_UploadAttachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadAttachment
        {
            public readonly string attachmentModel = "attachmentModel";
            public readonly string fileAttach = "fileAttach";
        }
        static readonly ActionParamsClass_DeleteFile s_params_DeleteFile = new ActionParamsClass_DeleteFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteFile DeleteFileParams { get { return s_params_DeleteFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteFile
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _Attachment = "_Attachment";
                public readonly string Index = "Index";
                public readonly string Vote = "Vote";
            }
            public readonly string _Attachment = "~/Areas/Personel/Views/Cartable/_Attachment.cshtml";
            public readonly string Index = "~/Areas/Personel/Views/Cartable/Index.cshtml";
            public readonly string Vote = "~/Areas/Personel/Views/Cartable/Vote.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CartableController : Comision.Ui.Areas.Personel.Controllers.CartableController
    {
        public T4MVC_CartableController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetListCartableOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetListCartable()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListCartable);
            GetListCartableOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ConfirmOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, long postId, int rowNumber, string description, long fieldofStudyId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Confirm(long requestId, long postId, int rowNumber, string description, long fieldofStudyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Confirm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rowNumber", rowNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "description", description);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fieldofStudyId", fieldofStudyId);
            ConfirmOverride(callInfo, requestId, postId, rowNumber, description, fieldofStudyId);
            return callInfo;
        }

        [NonAction]
        partial void ConfirmOnBehalfofOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long userId, long requestId, long postId, int rowNumber, string description);

        [NonAction]
        public override System.Web.Mvc.ActionResult ConfirmOnBehalfof(long userId, long requestId, long postId, int rowNumber, string description)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmOnBehalfof);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rowNumber", rowNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "description", description);
            ConfirmOnBehalfofOverride(callInfo, userId, requestId, postId, rowNumber, description);
            return callInfo;
        }

        [NonAction]
        partial void VoteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, long postId, int rowNumber, Comision.Model.Enum.RequestType requestType);

        [NonAction]
        public override System.Web.Mvc.ActionResult Vote(long requestId, long postId, int rowNumber, Comision.Model.Enum.RequestType requestType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Vote);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rowNumber", rowNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestType", requestType);
            VoteOverride(callInfo, requestId, postId, rowNumber, requestType);
            return callInfo;
        }

        [NonAction]
        partial void VotePermanentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Comision.Service.Model.VoteModel voteModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult VotePermanent(Comision.Service.Model.VoteModel voteModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VotePermanent);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "voteModel", voteModel);
            VotePermanentOverride(callInfo, voteModel);
            return callInfo;
        }

        [NonAction]
        partial void VoteTemporaryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Comision.Service.Model.VoteModel voteModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult VoteTemporary(Comision.Service.Model.VoteModel voteModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteTemporary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "voteModel", voteModel);
            VoteTemporaryOverride(callInfo, voteModel);
            return callInfo;
        }

        [NonAction]
        partial void ReturnOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, long postId, int rowNumber, string description, long fieldofStudyId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Return(long requestId, long postId, int rowNumber, string description, long fieldofStudyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Return);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rowNumber", rowNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "description", description);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fieldofStudyId", fieldofStudyId);
            ReturnOverride(callInfo, requestId, postId, rowNumber, description, fieldofStudyId);
            return callInfo;
        }

        [NonAction]
        partial void AgreetoVoteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, long postId, int rowNumber, string description, long fieldofStudyId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AgreetoVote(long requestId, long postId, int rowNumber, string description, long fieldofStudyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AgreetoVote);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rowNumber", rowNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "description", description);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fieldofStudyId", fieldofStudyId);
            AgreetoVoteOverride(callInfo, requestId, postId, rowNumber, description, fieldofStudyId);
            return callInfo;
        }

        [NonAction]
        partial void OppositiontoVoteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, long postId, int rowNumber, string description, long fieldofStudyId);

        [NonAction]
        public override System.Web.Mvc.ActionResult OppositiontoVote(long requestId, long postId, int rowNumber, string description, long fieldofStudyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OppositiontoVote);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rowNumber", rowNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "description", description);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fieldofStudyId", fieldofStudyId);
            OppositiontoVoteOverride(callInfo, requestId, postId, rowNumber, description, fieldofStudyId);
            return callInfo;
        }

        [NonAction]
        partial void GetCartableRequestCountOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, long userId);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCartableRequestCount(long userId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCartableRequestCount);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            GetCartableRequestCountOverride(callInfo, userId);
            return callInfo;
        }

        [NonAction]
        partial void AttachmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Attachment(long requestId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            AttachmentOverride(callInfo, requestId);
            return callInfo;
        }

        [NonAction]
        partial void GetAttachmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAttachment(long requestId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAttachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            GetAttachmentOverride(callInfo, requestId);
            return callInfo;
        }

        [NonAction]
        partial void UploadAttachmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Comision.Service.Model.AttachmentModel attachmentModel, System.Web.HttpPostedFileBase fileAttach);

        [NonAction]
        public override System.Web.Mvc.ActionResult UploadAttachment(Comision.Service.Model.AttachmentModel attachmentModel, System.Web.HttpPostedFileBase fileAttach)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadAttachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "attachmentModel", attachmentModel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileAttach", fileAttach);
            UploadAttachmentOverride(callInfo, attachmentModel, fileAttach);
            return callInfo;
        }

        [NonAction]
        partial void DeleteFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteFile(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteFileOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
